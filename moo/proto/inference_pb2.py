# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inference.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inference.proto',
  package='inference',
  syntax='proto3',
  serialized_options=_b('Z\r./proto;proto'),
  serialized_pb=_b('\n\x0finference.proto\x12\tinference\"!\n\x0cScaleRequest\x12\x11\n\tinstances\x18\x01 \x01(\x05\"\x0f\n\rScaleResponse\"1\n\x0ePredictRequest\x12\x1f\n\x05\x62\x61tch\x18\x01 \x03(\x0b\x32\x10.inference.Input\"3\n\x0fPredictResponse\x12 \n\x05\x62\x61tch\x18\x01 \x03(\x0b\x32\x11.inference.Output\"l\n\x05Input\x12\x0c\n\x04\x62ody\x18\x01 \x01(\x0c\x12(\n\x04meta\x18\x02 \x03(\x0b\x32\x1a.inference.Input.MetaEntry\x1a+\n\tMetaEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"|\n\x06Output\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04\x62ody\x18\x02 \x01(\x0c\x12)\n\x04meta\x18\x03 \x03(\x0b\x32\x1b.inference.Output.MetaEntry\x1a+\n\tMetaEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\x89\x01\n\tInference\x12:\n\x05Scale\x12\x17.inference.ScaleRequest\x1a\x18.inference.ScaleResponse\x12@\n\x07Predict\x12\x19.inference.PredictRequest\x1a\x1a.inference.PredictResponseB\x0fZ\r./proto;protob\x06proto3')
)




_SCALEREQUEST = _descriptor.Descriptor(
  name='ScaleRequest',
  full_name='inference.ScaleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instances', full_name='inference.ScaleRequest.instances', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=63,
)


_SCALERESPONSE = _descriptor.Descriptor(
  name='ScaleResponse',
  full_name='inference.ScaleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=80,
)


_PREDICTREQUEST = _descriptor.Descriptor(
  name='PredictRequest',
  full_name='inference.PredictRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch', full_name='inference.PredictRequest.batch', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=82,
  serialized_end=131,
)


_PREDICTRESPONSE = _descriptor.Descriptor(
  name='PredictResponse',
  full_name='inference.PredictResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch', full_name='inference.PredictResponse.batch', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=184,
)


_INPUT_METAENTRY = _descriptor.Descriptor(
  name='MetaEntry',
  full_name='inference.Input.MetaEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='inference.Input.MetaEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='inference.Input.MetaEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=294,
)

_INPUT = _descriptor.Descriptor(
  name='Input',
  full_name='inference.Input',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='inference.Input.body', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta', full_name='inference.Input.meta', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_INPUT_METAENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=294,
)


_OUTPUT_METAENTRY = _descriptor.Descriptor(
  name='MetaEntry',
  full_name='inference.Output.MetaEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='inference.Output.MetaEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='inference.Output.MetaEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=294,
)

_OUTPUT = _descriptor.Descriptor(
  name='Output',
  full_name='inference.Output',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='inference.Output.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='body', full_name='inference.Output.body', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta', full_name='inference.Output.meta', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_OUTPUT_METAENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=296,
  serialized_end=420,
)

_PREDICTREQUEST.fields_by_name['batch'].message_type = _INPUT
_PREDICTRESPONSE.fields_by_name['batch'].message_type = _OUTPUT
_INPUT_METAENTRY.containing_type = _INPUT
_INPUT.fields_by_name['meta'].message_type = _INPUT_METAENTRY
_OUTPUT_METAENTRY.containing_type = _OUTPUT
_OUTPUT.fields_by_name['meta'].message_type = _OUTPUT_METAENTRY
DESCRIPTOR.message_types_by_name['ScaleRequest'] = _SCALEREQUEST
DESCRIPTOR.message_types_by_name['ScaleResponse'] = _SCALERESPONSE
DESCRIPTOR.message_types_by_name['PredictRequest'] = _PREDICTREQUEST
DESCRIPTOR.message_types_by_name['PredictResponse'] = _PREDICTRESPONSE
DESCRIPTOR.message_types_by_name['Input'] = _INPUT
DESCRIPTOR.message_types_by_name['Output'] = _OUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ScaleRequest = _reflection.GeneratedProtocolMessageType('ScaleRequest', (_message.Message,), dict(
  DESCRIPTOR = _SCALEREQUEST,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.ScaleRequest)
  ))
_sym_db.RegisterMessage(ScaleRequest)

ScaleResponse = _reflection.GeneratedProtocolMessageType('ScaleResponse', (_message.Message,), dict(
  DESCRIPTOR = _SCALERESPONSE,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.ScaleResponse)
  ))
_sym_db.RegisterMessage(ScaleResponse)

PredictRequest = _reflection.GeneratedProtocolMessageType('PredictRequest', (_message.Message,), dict(
  DESCRIPTOR = _PREDICTREQUEST,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.PredictRequest)
  ))
_sym_db.RegisterMessage(PredictRequest)

PredictResponse = _reflection.GeneratedProtocolMessageType('PredictResponse', (_message.Message,), dict(
  DESCRIPTOR = _PREDICTRESPONSE,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.PredictResponse)
  ))
_sym_db.RegisterMessage(PredictResponse)

Input = _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), dict(

  MetaEntry = _reflection.GeneratedProtocolMessageType('MetaEntry', (_message.Message,), dict(
    DESCRIPTOR = _INPUT_METAENTRY,
    __module__ = 'inference_pb2'
    # @@protoc_insertion_point(class_scope:inference.Input.MetaEntry)
    ))
  ,
  DESCRIPTOR = _INPUT,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.Input)
  ))
_sym_db.RegisterMessage(Input)
_sym_db.RegisterMessage(Input.MetaEntry)

Output = _reflection.GeneratedProtocolMessageType('Output', (_message.Message,), dict(

  MetaEntry = _reflection.GeneratedProtocolMessageType('MetaEntry', (_message.Message,), dict(
    DESCRIPTOR = _OUTPUT_METAENTRY,
    __module__ = 'inference_pb2'
    # @@protoc_insertion_point(class_scope:inference.Output.MetaEntry)
    ))
  ,
  DESCRIPTOR = _OUTPUT,
  __module__ = 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.Output)
  ))
_sym_db.RegisterMessage(Output)
_sym_db.RegisterMessage(Output.MetaEntry)


DESCRIPTOR._options = None
_INPUT_METAENTRY._options = None
_OUTPUT_METAENTRY._options = None

_INFERENCE = _descriptor.ServiceDescriptor(
  name='Inference',
  full_name='inference.Inference',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=423,
  serialized_end=560,
  methods=[
  _descriptor.MethodDescriptor(
    name='Scale',
    full_name='inference.Inference.Scale',
    index=0,
    containing_service=None,
    input_type=_SCALEREQUEST,
    output_type=_SCALERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Predict',
    full_name='inference.Inference.Predict',
    index=1,
    containing_service=None,
    input_type=_PREDICTREQUEST,
    output_type=_PREDICTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERENCE)

DESCRIPTOR.services_by_name['Inference'] = _INFERENCE

# @@protoc_insertion_point(module_scope)
